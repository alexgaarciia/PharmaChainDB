-- DROP TABLES
DROP TABLE PHARMACY CASCADE CONSTRAINTS;
DROP TABLE PHONE_PHARMACY CASCADE CONSTRAINTS;
DROP TABLE EMPLOYEE CASCADE CONSTRAINTS;
DROP TABLE SHIFT CASCADE CONSTRAINTS;
DROP TABLE SCHEDULE CASCADE CONSTRAINTS;
DROP TABLE MEDICINE CASCADE CONSTRAINTS;
DROP TABLE TYPE_ADMINISTRATION CASCADE CONSTRAINTS;
DROP TABLE TYPE_EXCIPIENT CASCADE CONSTRAINTS;
DROP TABLE LABORATORY CASCADE CONSTRAINTS;
DROP TABLE PHONE_LAB CASCADE CONSTRAINTS;
DROP TABLE MEDICINE_TYPE_EXCIPIENT CASCADE CONSTRAINTS;
DROP TABLE STOCK CASCADE CONSTRAINTS;
DROP TABLE MEDICINE_ACTIVE_INGREDIENTS CASCADE CONSTRAINTS;
DROP TABLE ACTIVE_INGREDIENTS CASCADE CONSTRAINTS;
DROP TABLE DISTRIBUTOR CASCADE CONSTRAINTS;
DROP TABLE "ORDER" CASCADE CONSTRAINTS;
DROP TABLE CATALOGUE CASCADE CONSTRAINTS;
DROP TABLE PRODUCT CASCADE CONSTRAINTS;
DROP TABLE PRODUCT_COMPANY CASCADE CONSTRAINTS;
DROP TABLE COMPANY CASCADE CONSTRAINTS;

-- CREATE TABLES
CREATE TABLE PHARMACY(
CODE NUMBER NOT NULL,
NAME VARCHAR2(30) UNIQUE NOT NULL,
ADDRESS VARCHAR2(100) NOT NULL,
EMAIL VARCHAR2(50),
SCHEDULE_CODE NUMBER,
CATALOGUE_CODE NUMBER,
CONSTRAINT PK_PHARMACY PRIMARY KEY (CODE)
);

CREATE TABLE PHONE_PHARMACY(
CODE_PHARMACY NUMBER,
PHONE_NUMBER NUMBER(9) UNIQUE,
PRIMARY KEY(CODE_PHARMACY, PHONE_NUMBER)
);

CREATE TABLE EMPLOYEE(
DNI VARCHAR2(9)NOT NULL,
NAME VARCHAR2(30) NOT NULL,
LASTNAME VARCHAR2(30) NOT NULL,
BIRTHDATE DATE NOT NULL,
SSN CHAR(9) NOT NULL,
SHIFT_CODE NUMBER,
SUPER_SSN CHAR(9),
PHARMACY_CODE NUMBER,
CONSTRAINT PK_EMPLOYEE PRIMARY KEY (SSN)
);

CREATE TABLE SHIFT(
CODE NUMBER NOT NULL,
NAME VARCHAR2(30) NOT NULL,
"START" VARCHAR2(9) NOT NULL,
"END" VARCHAR2(9) NOT NULL,
CONSTRAINT PK_SHIFT PRIMARY KEY (CODE),
CONSTRAINT CHECK_SHIFT CHECK(NAME IN ('MORNING', 'AFTERNOON'))
);

CREATE TABLE SCHEDULE(
CODE NUMBER NOT NULL,
NAME VARCHAR2(30) NOT NULL,
"START" VARCHAR2(30) NOT NULL,
"END" VARCHAR2(30) NOT NULL,
CONSTRAINT PK_SCHEDULE PRIMARY KEY (CODE)
);

CREATE TABLE MEDICINE(
CODE NUMBER NOT NULL,
LAB_NAME VARCHAR2(30),
COMMERCIAL_BRAND VARCHAR2(30) NOT NULL,
TYPE_EXCIPIENT NUMBER,
UNIT_VERSION VARCHAR2(10) NOT NULL,
TYPE_ADMIN_CODE NUMBER,
CONSTRAINT PK_MEDICINE PRIMARY KEY (CODE)
);

CREATE TABLE TYPE_ADMINISTRATION(
CODE NUMBER NOT NULL,
NAME VARCHAR2(30) NOT NULL,
CONSTRAINT PK_TYPE_ADMINISTRATION PRIMARY KEY (CODE),
CONSTRAINT CHECK_FORMAT CHECK(NAME IN ('ORALLY', 'INTRAVENOUS'))
);

CREATE TABLE TYPE_EXCIPIENT(
CODE NUMBER NOT NULL,
NAME VARCHAR2(30) NOT NULL,
FORMAT VARCHAR2(30) NOT NULL,
CONSTRAINT PK_TYPE_EXCIPIENT PRIMARY KEY (CODE),
CONSTRAINT CHECK_TYPE_EXCIPIENT CHECK(FORMAT IN ('CAPSULE', 'TABLET', 'PILL', 'CREAM', 'SPRAY', 'SYRUP'))
);

CREATE TABLE LABORATORY(
NAME VARCHAR2(30) NOT NULL,
ADDRESS VARCHAR2(100) NOT NULL,
WEBPAGE VARCHAR2(50) NOT NULL,
CONSTRAINT PK_LABORATORY PRIMARY KEY (NAME)
);

CREATE TABLE PHONE_LAB(
NAME_LAB VARCHAR2(30),
PHONE_NUMBER NUMBER UNIQUE,
PRIMARY KEY(NAME_LAB, PHONE_NUMBER)
);

CREATE TABLE MEDICINE_TYPE_EXCIPIENT(
TYPE_EXCIPIENT NUMBER,
MEDICINE_CODE NUMBER,
PRIMARY KEY (TYPE_EXCIPIENT, MEDICINE_CODE)
);

CREATE TABLE STOCK(
CODE NUMBER NOT NULL,
PHARMACY_CODE NUMBER,
MEDICINE_CODE NUMBER,
QUANTITY NUMBER NOT NULL,
CONSTRAINT PK_STOCK PRIMARY KEY(CODE)
);

CREATE TABLE MEDICINE_ACTIVE_INGREDIENTS(
MEDICINE_CODE NUMBER,
ACTIVE_INGREDIENT_CODE NUMBER,
PRIMARY KEY(MEDICINE_CODE, ACTIVE_INGREDIENT_CODE)
);

CREATE TABLE ACTIVE_INGREDIENTS(
CODE NUMBER NOT NULL,
NAME VARCHAR2(30) NOT NULL,
CONSTRAINT PK_ACTIVE_INGREDIENTS PRIMARY KEY (CODE)
);

CREATE TABLE DISTRIBUTOR(
CIF VARCHAR2(9) NOT NULL,
NAME VARCHAR2(30) NOT NULL,
WEBPAGE VARCHAR2(50) NOT NULL,
CONSTRAINT PK_DISTRIBUTOR PRIMARY KEY (CIF)
);

CREATE TABLE "ORDER"(
PHARMACY_CODE NUMBER,
MEDICINE_CODE NUMBER,
DISTRIBUTOR_CIF VARCHAR2(9),
ORDER_DATE DATE NOT NULL,
QUANTITY NUMBER NOT NULL,
DELIVERY_DATE DATE NOT NULL,
EMPLOYEE_CODE CHAR(9) NOT NULL,
PRIMARY KEY(PHARMACY_CODE, MEDICINE_CODE, DISTRIBUTOR_CIF, ORDER_DATE)
);

CREATE TABLE CATALOGUE(
CODE NUMBER,
CONSTRAINT PK_CATALOGUE PRIMARY KEY (CODE)
);

CREATE TABLE PRODUCT(
CODE NUMBER NOT NULL,
CATEGORY VARCHAR2(30) NOT NULL,
NAME VARCHAR2(30) NOT NULL,
DESCRIPTION VARCHAR2(100) NOT NULL,
DISTRIBUTOR_CODE VARCHAR2(9),
CATALOGUE_CODE NUMBER,
CONSTRAINT PK_PRODUCT PRIMARY KEY (CODE)
);

CREATE TABLE PRODUCT_COMPANY(
PRODUCT_CODE NUMBER,
COMPANY_CODE VARCHAR2(9), 
PRIMARY KEY (PRODUCT_CODE, COMPANY_CODE)
);

CREATE TABLE COMPANY(
CIF VARCHAR2(9) NOT NULL,
NAME VARCHAR2(30) NOT NULL,
WEBPAGE VARCHAR2(50) NOT NULL,
CONSTRAINT PK_COMPANY PRIMARY KEY (CIF)
);

-- CONSTRAINTS
---- PHARMACY
--- Firstly, the constraints regarding the pharmacy must be created. As stated in the relational diagram from the project,
--- there are two foreign keys. It is important to keep in mind what these are. A foreign key is a column or columns of
--- data in one table that refers to the unique data values in another table. Foreign keys link together two or more tables
--- in a relational database.
--- In this case, the pharmacy table have two foreign keys: 'SCHEDULE_CODE' (referencing 'CODE' of the 'SCHEDULE' table) and 
--- 'CATALOGUE_CODE' (referencing 'CODE' of the 'CATALOGUE' table). In order to implement these constraints, the well-known
--- function 'ALTER TABLE' is used. Why? This is due to the exact purpose that it is desired to alter an existing table.
ALTER TABLE PHARMACY ADD CONSTRAINT FK_PHARMACY FOREIGN KEY (SCHEDULE_CODE) REFERENCES SCHEDULE (CODE);
ALTER TABLE PHARMACY ADD CONSTRAINT FK_PHARMACY1 FOREIGN KEY (CATALOGUE_CODE) REFERENCES CATALOGUE (CODE);

---- PHONE_PHARMACY
--- Secondly, it is the turn for the table 'PHONE_PHARMACY'. This table contains the code of the pharmacy to which the telephone
--- is associated. Hence,  'CODE_PHARMACY' will be the only foreign key (referencing 'CODE' of the 'PHARMACY' table. 
ALTER TABLE PHONE_PHARMACY ADD CONSTRAINT FK_PHONE_PHARMACY FOREIGN KEY (CODE_PHARMACY) REFERENCES PHARMACY (CODE) ON DELETE CASCADE;

---- EMPLOYEE
--- Thirdly, the 'EMPLOYEE' table also has some foreign keys of high vitality: 'SHIFT_CODE' (referencing 'CODE' of the 'SHIFT' table),
--- 'SUPER_SSN' (referencing the manager of the pharmacy, identified by 'SSN' of the table 'PHARMACY') and 'PHARMACY_CODE'
--- (used to know in which pharmacy does the employee work, identified by 'CODE' of the 'PHARMACY' table).
ALTER TABLE EMPLOYEE ADD CONSTRAINT FK_EMPLOYEE FOREIGN KEY (SHIFT_CODE) REFERENCES SHIFT (CODE);
ALTER TABLE EMPLOYEE ADD CONSTRAINT FK_EMPLOYEE1 FOREIGN KEY (SUPER_SSN) REFERENCES EMPLOYEE (SSN) ON DELETE CASCADE;
ALTER TABLE EMPLOYEE ADD CONSTRAINT FK_EMPLOYEE2 FOREIGN KEY (PHARMACY_CODE) REFERENCES PHARMACY (CODE);

---- MEDICINE
--- Moving on, the foreign keys of the table 'MEDICINE' also need to be stated. This table contains three foreign keys:
--- 'LAB_NAME' (referencing 'NAME' of the table 'LABORATORY'), 'TYPE_EXCIPIENT (referencing 'CODE' of the 'TYPE_EXCIPIENT' table)
--- and 'TYPE_ADMIN_CODE' (referencing 'CODE' of the 'TYPE_ADMINISTRATION' table).
ALTER TABLE MEDICINE ADD CONSTRAINT FK_MEDICINE FOREIGN KEY (LAB_NAME) REFERENCES LABORATORY (NAME);
ALTER TABLE MEDICINE ADD CONSTRAINT FK_MEDICINE1 FOREIGN KEY (TYPE_EXCIPIENT) REFERENCES TYPE_EXCIPIENT (CODE);
ALTER TABLE MEDICINE ADD CONSTRAINT FK_MEDICINE2 FOREIGN KEY (TYPE_ADMIN_CODE) REFERENCES TYPE_ADMINISTRATION (CODE);

---- PHONE_LAB
--- Furthermore, the table 'PHONE_LAB' has one foreign key. This table is similar to 'PHONE_PHARMACY'. The foreign key is
--- 'NAME_LAB' (referencing 'NAME' of the 'LABORATORY' table to identify to which laboratory is associated the telephone).
ALTER TABLE PHONE_LAB ADD CONSTRAINT FK_PHONE_LAB FOREIGN KEY (NAME_LAB) REFERENCES LABORATORY (NAME) ON DELETE CASCADE;

---- MEDICINE_TYPE_EXCIPIENT
--- The table 'MEDICINE_TYPE_EXCIPIENT' contains two foreign keys. Note that these are of high vitality, since the goal of this
--- table is to store all the excipients that a medicien contain. The foreign keys are:
--- 'TYPE_EXCIPIENT' (referencing 'CODE' on the 'TYPE_EXCIPIENT' table) and 'MEDICINE_CODE' (referencing  'CODE' of the 'MEDICINE' 
--- table to know to which medicine is the excipient associated).
ALTER TABLE MEDICINE_TYPE_EXCIPIENT ADD CONSTRAINT FK_MEDICINE_TYPE_EXCIPIENT FOREIGN KEY (TYPE_EXCIPIENT) REFERENCES TYPE_EXCIPIENT (CODE) ON DELETE CASCADE;
ALTER TABLE MEDICINE_TYPE_EXCIPIENT ADD CONSTRAINT FK_MEDICINE_TYPE_EXCIPIEN1 FOREIGN KEY (MEDICINE_CODE) REFERENCES MEDICINE (CODE) ON DELETE CASCADE;

---- STOCK
--- Following the relational diagram, it is the turn of the 'STOCK' table. Representing one of the most important tables of the
--- model, contains only two foreign keys: 'PHARMACY_CODE' (referencing 'CODE' of the 'PHARMACY' table) and 'MEDICINE_CODE'
--- (referencing 'CODE' of the 'MEDICINE' table).
ALTER TABLE STOCK ADD CONSTRAINT FK_STOCK FOREIGN KEY (PHARMACY_CODE) REFERENCES PHARMACY (CODE) ON DELETE CASCADE;
ALTER TABLE STOCK ADD CONSTRAINT FK_STOCK1 FOREIGN KEY (MEDICINE_CODE) REFERENCES MEDICINE (CODE);

---- MEDICINE_ACTIVE_INGREDIENTS
--- The table 'MEDICINE_ACTIVE_INGREDIENTS' contains two foreign keys and was created with the same idea as the table 'MEDICINE_TYPE_EXCIPIENT':
--- store the active ingredients that a medicien contain. The foreign keys are:
--- 'ACTIVE_INGREDIENT_CODE' (referencing 'CODE' on the 'ACTIVE_INGREDIENTS' table) and 'MEDICINE_CODE' (referencing  'CODE' of the 'MEDICINE' 
--- table to know to which medicine is the active ingredient associated).
ALTER TABLE MEDICINE_ACTIVE_INGREDIENTS ADD CONSTRAINT FK_MEDICINE_ACTIVE_INGREDIENTS FOREIGN KEY (MEDICINE_CODE) REFERENCES MEDICINE (CODE) ON DELETE CASCADE;
ALTER TABLE MEDICINE_ACTIVE_INGREDIENTS ADD CONSTRAINT FK_MEDICINE_ACTIVE_INGREDIENTS1 FOREIGN KEY (ACTIVE_INGREDIENT_CODE) REFERENCES ACTIVE_INGREDIENTS (CODE) ON DELETE CASCADE;

---- ORDER
--- It is now time of defining the foreign keys of the 'ORDER' table. This table is in charge of storing all the orders
--- placed by a pharmacy. Its foreign keys are: 'PHARMACY_CODE' (referencing 'CODE' of the 'PHARMACY' table), 'MEDICINE_CODE'
--- (referencing 'CODE' of the 'MEDICINE' table) and 'DISTRIBUTOR_CIF' (referencing 'CIF' of the 'DISTRIBUTOR').
ALTER TABLE "ORDER" ADD CONSTRAINT FK_ORDER FOREIGN KEY (PHARMACY_CODE) REFERENCES PHARMACY (CODE) ON DELETE CASCADE;
ALTER TABLE "ORDER" ADD CONSTRAINT FK_ORDER1 FOREIGN KEY (MEDICINE_CODE) REFERENCES MEDICINE (CODE) ON DELETE CASCADE;
ALTER TABLE "ORDER" ADD CONSTRAINT FK_ORDER2 FOREIGN KEY (DISTRIBUTOR_CIF) REFERENCES DISTRIBUTOR (CIF);

---- PRODUCT
--- Additionally, the table 'PRODUCT' has two foreign keys: 'DISTRIBUTOR_CODE' (referencing 'CIF' of the table 'DISTRIBUTOR'), and
--- 'CATALOGUE_CODE' (referencing 'CODE' of the 'CATALOGUE' table).
ALTER TABLE PRODUCT ADD CONSTRAINT FK_PRODUCT FOREIGN KEY (DISTRIBUTOR_CODE) REFERENCES DISTRIBUTOR (CIF) ON DELETE CASCADE;
ALTER TABLE PRODUCT ADD CONSTRAINT FK_PRODUCT1 FOREIGN KEY (CATALOGUE_CODE) REFERENCES CATALOGUE (CODE);

---- PRODUCT_COMPANY
--- Finally, there is the table 'PRODUCT_COMPANY', in charge of storing the products and the company that distributes them.
--- Hence, there are two foreign keys: 'PRODUCT_CODE' (referencing the 'CODE' of the 'PRODUCT' table) and
--- 'COMPANY_CODE' (referencing 'CIF' of the 'COMPANY' table).
ALTER TABLE PRODUCT_COMPANY ADD CONSTRAINT FK_PRODUCT_COMPANY FOREIGN KEY (PRODUCT_CODE) REFERENCES PRODUCT (CODE) ON DELETE CASCADE;
ALTER TABLE PRODUCT_COMPANY ADD CONSTRAINT FK_PRODUCT_COMPANY2 FOREIGN KEY (COMPANY_CODE) REFERENCES COMPANY (CIF) ON DELETE CASCADE;
